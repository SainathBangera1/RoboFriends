{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","username","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","Error","cardArray","map","item","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","marginTop","overflowY","height","borderTop","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","Component","App","onsearchChange","event","setState","searchfield","target","value","_this2","fetch","then","response","json","data","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.ea978e8e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({id,username,name,email})=>{\n    return(\n        <div  className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <h2>{name}</h2>\n            <img alt='robots' src={`https://www.robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{username}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    ) \n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card';\n\nconst CardList = ({robots})=>{\n    if(!robots){\n        throw new Error('NOOOOO!!!');\n    }\n    const cardArray = robots.map((item)=>{\n        return <Card key={item.id} id={item.id} name={item.name} username={item.username} email={item.email} />\n    })\n    return (\n        <div>{cardArray}</div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange})=>{\n    return (\n        <input \n        className='pa2 ba b--green bg-lightest-blue' \n        type='search' \n        placeholder='search Robots'\n        onChange={searchChange}\n        />\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props)=>{\n    return (\n        <div style={{marginTop:'10px',overflowY:'scroll', height:'600px',borderTop:'2px solid cyan'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React,{Component} from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            hasError:false\n        };\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oops Something went wrong!!!</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state = {\n            robots:[],\n            searchfield:'',\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>{return response.json()})\n        .then((data) =>{\n            this.setState({robots:data})\n        });\n    }\n    onsearchChange=(event)=>{\n        this.setState({searchfield:event.target.value});\n    }\n    render (){\n        const filteredRobots = this.state.robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if(this.state.robots.length===0){\n            return <h1 className='tc'>Loading...</h1>\n        } else{\n            return (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onsearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n                )\n        }\n        \n    }\n    \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n  root.render(<App />);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}